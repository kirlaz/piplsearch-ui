{"version":3,"sources":["assets/img/defprofile.png","api/APIConfig.js","api/API.js","history.js","redux/actions/advCreator.js","redux/actions/personCreators.js","redux/actions/historyCreators.js","components/TopHistory/TopHistory.js","components/LineSearch/LineSearch.js","components/SearchComponent/SearchComponent.js","containers/SearchContainer.js","components/AdvancedSearch/AdvancedSearch.js","components/AdvancedSearch/validate.js","components/Preloader/Preloader.js","containers/AdvancedSearchContainer.js","pages/StartPage.js","helpers/capitalize.js","components/ResultsSidebar/QueryRowItem.js","components/ResultsSidebar/QueryRow.js","components/HistoryRecords/HistoryRecords.js","components/Preloader/index.js","pages/HistoryPage.js","redux/actions/authCreators.js","components/Header/ProfileMenu.js","components/Header/Header.js","containers/Layout.js","components/ProfilePageComponents/MainInfoRow.js","helpers/typeFixer.js","components/ProfilePageComponents/Popover.js","components/ProfilePageComponents/NamesRow.js","components/ProfilePageComponents/EmailsRow.js","components/ProfilePageComponents/AddressesRow.js","components/ProfilePageComponents/PhonesRow.js","components/ProfilePageComponents/EducationsRow.js","components/ProfilePageComponents/JobsRow.js","components/ProfilePageComponents/UrlsRow.js","components/ProfilePageComponents/UsernamesRow.js","components/Results/ResultsRow.js","components/Results/Results.js","components/ProfilePageComponents/RelationshipsRow.js","components/ProfilePageComponents/Profile.js","pages/ProfilePage.js","components/ResultsSidebar/ResultsSidebar.js","pages/ResultsPage.js","pages/LoginPage.js","App.js","serviceWorker.js","redux/reducers/advReducer.js","redux/reducers/authReducer.js","redux/reducers/historyReducer.js","redux/reducers/personReducer.js","components/ErrorBoundary/ErrorBoundary.js","redux/reducers/oneLineReducer.js","index.js"],"names":["module","exports","API","axios","baseURL","withCredentials","searchOneLine","query","location","params","length","get","search","data","post","testMode","getHistory","createBrowserHistory","ADV","setOpen","type","setClose","PERSON","responseHandler","response","dispatch","status","person","setPersonInfo","searchQuery","possible_persons","setPersons","clearPersons","setQuery","clearError","sendOneLine","a","isFetching","then","history","push","catch","error","setError","message","sendAdvanced","personsCount","payload","SEARCH","getPersonById","id","searchHistoryId","setTopHistory","topHistory","topHistoryFailed","setHistory","setUsers","users","withRouter","ListGroup","bsPrefix","className","as","map","name","imgUrl","Item","action","key","hash","onClick","src","alt","style","height","width","DefProfile","RenderField","input","placeholder","size","FormControl","LineSearch","handleSubmit","open","dirty","Form","onSubmit","Field","component","Button","disabled","title","reduxForm","form","destroyOnUnmount","values","props","connect","state","ownProps","advReducer","initialState","oneLineReducer","SearchComponent","this","onFieldChange","errorHandle","NavLink","role","Row","Col","md","Component","personReducer","AddRemoveLink","text","index","fields","remove","renderField","meta","touched","Control","renderNames","toUpperCase","slice","FormBoot","Group","renderEmails","email","renderPhones","phone","renderUsernames","username","renderAddresses","address","renderAssociates","associate","renderEducations","education","renderJobs","job","renderAge","errors","phones","flagError","flagEmpty","Object","keys","forEach","Array","prototype","call","element","code","number","SubmissionError","_error","validate","send","clearSubmitErrors","reset","FieldArray","Preloader","includes","initialValues","array","filter","dob","range","split","date","start","Date","setFullYear","getFullYear","end","moment","format","setDate","getDate","date_range","Collapse","in","StartPage","getTopHistory","loggedIn","Helmet","to","authReducer","historyReducer","capitalize","QueryRowItem","property","console","log","getTime","el","item","fontWeight","initialData","addresses","emails","names","jobs","educations","usernames","relationships","QueryRow","HistoryRecords","historyRecords","records","record","searchDate","HistoryPage","pageSize","currentPage","userLogin","login","startDate","endDate","startOnChange","bind","endOnChange","handlePageChange","userChange","setState","historyQuery","event","target","value","Container","xs","Dropdown","onChange","user","utils","DateFnsUtils","label","breakClassName","breakLinkClassName","previousLinkClassName","previousClassName","nextClassName","nextLinkClassName","pageClassName","pageLinkClassName","activeClassName","containerClassName","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","test","selected","AUTH","userLogout","fetchUserStart","fetchUserFailed","sendSignout","getState","session_token","token","headers","Authorization","Nav","Toggle","childBsPrefix","Menu","alignRight","Header","Divider","variant","pathname","Navbar","expand","bg","Brand","children","fluid","MainInfoRow","images","user_ids","gender","origin_countries","lg","order","span","Carousel","indicators","image","Image","roundedCircle","thumbnail_token","display","content","country","typeFixer","replace","word","join","PopoverOverlay","Popover","Title","pointer","Content","toString","NamesRow","OverlayTrigger","trigger","placement","overlay","EmailsRow","AddressesRow","PhonesRow","display_international","EducationsRow","JobsRow","industry","UrlsRow","urls","url","href","rel","UsernamesRow","Results","persons","ref","outerRef","relationship","padding","Profile","ResultsSidebar","handleClick","ResultsPage","setIsFetching","unsetIsFetching","componentRef","onBeforeGetContent","onBeforePrint","handlePrint","fetching","fetchUser","password","err","useState","setLogin","pass","setPass","Spinner","animation","minWidth","Label","htmlFor","autoComplete","Alert","block","path","exact","render","ProfilePage","LoginPage","Boolean","window","hostname","match","getFromHistory","ErrorBoundary","errorInfo","authError","historyError","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b6aa4c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defprofile.782adc2b.png\";","import * as axios from \"axios\";\r\n\r\nexport const API = axios.create({\r\n    baseURL: 'http://search.mgap.ru:8081/api',\r\n    withCredentials: true,\r\n    // baseURL: 'http://localhost:8081/api'\r\n})\r\n\r\n// export const CONFIG = {\r\n//     BASE_URL: 'http://localhost:8081/api'\r\n// };","import {API} from \"./APIConfig\";\r\n\r\nexport const signIn = data => {\r\n    return API.post(`/signin`, data);\r\n}\r\n\r\nexport const signOut = (token) => {\r\n    return API.get(`/signout`, {\r\n        headers: {\r\n            Authorization: token\r\n        }\r\n    });\r\n}\r\n\r\nexport const searchOneLine = ({query, location}) => {\r\n    const params = {};\r\n    if(query && query.length) {\r\n        params.query = query;\r\n    }\r\n    if(location && location.length) {\r\n        params.location = location;\r\n    }\r\n    return API.get(`/oneLineSearch`, {\r\n        params\r\n    });\r\n}\r\n\r\nexport const search = (data) => {\r\n    return API.post(`/search`, {\r\n        ...data,\r\n        testMode: true\r\n    });\r\n}\r\n\r\nexport const topHistory = () => {\r\n    return API.get(`/topHistory`);\r\n}\r\n\r\nexport const getFromHistory = (searchHistoryId) => {\r\n    return API.get(`/getFromHistory`, {\r\n        params: {\r\n            searchHistoryId\r\n        }\r\n    });\r\n}\r\n\r\nexport const getHistory = data => {\r\n    return API.post(`/history`, data);\r\n}\r\n\r\nexport const getUsers = () => {\r\n    return API.get(`/users`);\r\n}","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory();","export const ADV = {\r\n    SET_OPEN: 'SET_OPEN',\r\n    SET_CLOSE: 'SET_CLOSE'\r\n}\r\n\r\nexport const setOpen = () => {\r\n    return {\r\n        type: ADV.SET_OPEN,\r\n    }\r\n}\r\n\r\nexport const setClose = () => {\r\n    return {\r\n        type: ADV.SET_CLOSE\r\n    }\r\n}","import {search, searchOneLine} from \"../../api/API\";\r\nimport history from \"../../history\";\r\nimport { setClose } from \"./advCreator\";\r\n\r\nexport const PERSON = {\r\n    SET_PERSON_INFO: 'SET_PERSON_INFO',\r\n    SET_PERSONS: 'SET_PERSONS',\r\n    CLEAR_PERSONS: 'CLEAR_PERSONS',\r\n    SET_ERROR: 'SET_ERROR',\r\n    CLEAR_ERROR: 'CLEAR_ERROR',\r\n    IS_FETCHING: 'IS_FETCHING',\r\n    SET_QUERY: 'SET_QUERY'\r\n}\r\n\r\nconst responseHandler = (response, dispatch) => {\r\n    if(response.status === 200) {\r\n        if(response.data.person) {\r\n            dispatch(\r\n                setPersonInfo({\r\n                    person: response.data.person,\r\n                    searchQuery: response.data.query\r\n                })\r\n            );\r\n        } else if(response.data.possible_persons) {\r\n            dispatch(\r\n                setPersons({\r\n                    possible_persons: response.data.possible_persons,\r\n                    searchQuery: response.data.query\r\n                })\r\n            );\r\n        } else {\r\n            dispatch(clearPersons());\r\n            dispatch(setQuery(response.data.query));\r\n        }\r\n        dispatch(clearError());\r\n        dispatch(setClose());\r\n    }\r\n}\r\n\r\nconst setQuery = searchQuery => {\r\n    return {\r\n        type: PERSON.SET_QUERY,\r\n        searchQuery\r\n    }\r\n}\r\n\r\nexport const sendOneLine = (query, location) => {\r\n    return async dispatch => {\r\n        dispatch(isFetching(true));\r\n        searchOneLine({\r\n            query,\r\n            location\r\n        })\r\n            .then((response) => {\r\n                dispatch(isFetching(false));\r\n                responseHandler(response, dispatch);\r\n                history.push(\"/results\");\r\n            })\r\n            .catch(error => {\r\n                if(error.response) {\r\n                    dispatch(setError(error.response.data.message));\r\n                }\r\n                dispatch(isFetching(false));\r\n                dispatch(setClose());\r\n            });\r\n    }\r\n}\r\n\r\nexport const clearError = () => {\r\n    return {\r\n        type: PERSON.CLEAR_ERROR\r\n    }\r\n}\r\n\r\nexport const sendAdvanced = data => {\r\n    return async dispatch => {\r\n        dispatch(isFetching(true));\r\n        search(data)\r\n            .then((response) => {\r\n                dispatch(isFetching(false));\r\n                responseHandler(response, dispatch);\r\n                history.push('/results');\r\n            })\r\n            .catch(error => {\r\n                if(error.response) {\r\n                    dispatch(setError(error.response.data.message));\r\n                }\r\n                dispatch(isFetching(false));\r\n                dispatch(setClose());\r\n            });\r\n    }\r\n}\r\n\r\nexport const setPersonInfo = ({person, personsCount, searchQuery}) => {\r\n    return {\r\n        type: PERSON.SET_PERSON_INFO,\r\n        payload: {\r\n            person,\r\n            personsCount,\r\n            searchQuery\r\n        }\r\n    }\r\n}\r\n\r\nexport const setPersons = ({possible_persons, personsCount, searchQuery}) => {\r\n    return {\r\n        type: PERSON.SET_PERSONS,\r\n        payload: {\r\n            possible_persons,\r\n            personsCount,\r\n            searchQuery\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearPersons = () => {\r\n    return {\r\n        type: PERSON.CLEAR_PERSONS\r\n    }\r\n}\r\n\r\nexport const setError = (status) => {\r\n    return {\r\n        type: PERSON.SET_ERROR,\r\n        status\r\n    }\r\n}\r\n\r\nexport const isFetching = (isFetching) => {\r\n    return {\r\n        type: PERSON.IS_FETCHING,\r\n        isFetching\r\n    }\r\n}","import {topHistory, getHistory as history, getFromHistory, getUsers} from '../../api/API';\r\nimport {clearError, setError, setPersonInfo, setPersons, isFetching, clearPersons} from \"./personCreators\";\r\n\r\nexport const SEARCH = {\r\n    SET_TOP_HISTORY: 'SET_TOP_HISTORY',\r\n    SET_HISTORY: 'SET_HISTORY',\r\n    SET_USERS: 'SET_USERS',\r\n    HISTORY_FAILED: 'HISTORY_FAILED'\r\n}\r\n\r\nexport const getPersonById = (id) => {\r\n    return async dispatch => {\r\n        dispatch(isFetching(true));\r\n        await getFromHistory(id)\r\n            .then(response => {\r\n                dispatch(isFetching(false));\r\n                dispatch(clearPersons());\r\n                if(response.status === 200) {\r\n                    if(response.data.person) {\r\n                        dispatch(setPersonInfo({\r\n                            person: response.data.person,\r\n                            personsCount: response.data['@persons_count'],\r\n                            searchQuery: response.data.query\r\n                        }));\r\n                    } else if(response.data.possible_persons) {\r\n                        dispatch(setPersons({\r\n                            possible_persons: response.data.possible_persons,\r\n                            personsCount: response.data['@persons_count'],\r\n                            searchQuery: response.data.query\r\n                        }));\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(isFetching(false));\r\n                dispatch(clearPersons());\r\n                if(error.response && error.response.status === 400) {\r\n                    dispatch(setError('Bad request'));\r\n                } else if (error.response && error.response.status === 401) {\r\n                    dispatch(setError('You\\'re not authorized'));\r\n                } else if (error.response && error.response.status === 500) {\r\n                    dispatch(setError('Server problem appeared'))\r\n                } else {\r\n                    dispatch(setError('Not able to connect to the server'));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getTopHistory = () => {\r\n    return async dispatch => {\r\n        dispatch(isFetching(true));\r\n        await topHistory()\r\n            .then(response => {\r\n                dispatch(isFetching(false));\r\n                dispatch(clearPersons());\r\n                if(response.status === 200) {\r\n                    dispatch(setTopHistory(response.data))\r\n                    dispatch(clearError())\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(clearPersons());\r\n                dispatch(isFetching(false));\r\n                if(error.response && error.response.status === 400) {\r\n                    dispatch(topHistoryFailed('Bad request'));\r\n                } else if (error.response && error.response.status === 401) {\r\n                    dispatch(topHistoryFailed('You\\'re not authorized'));\r\n                } else {\r\n                    dispatch(setError('Not able to connect to the server'));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const setTopHistory = (topHistory) => {\r\n    return {\r\n        type: SEARCH.SET_TOP_HISTORY,\r\n        payload: {\r\n            topHistory\r\n        }\r\n    }\r\n}\r\n\r\nexport const getHistory = (data) => {\r\n    return async dispatch => {\r\n        dispatch(isFetching(true));\r\n        history(data)\r\n            .then(response => {\r\n                dispatch(clearPersons());\r\n                dispatch(isFetching(false));\r\n                if(response.status === 200) {\r\n                    dispatch(setHistory(response.data));\r\n                    dispatch(clearError())\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(isFetching(false));\r\n                dispatch(clearPersons());\r\n                if(error.response && error.response.status === 400) {\r\n                    dispatch(topHistoryFailed('Bad request'));\r\n                } else if (error.response && error.response.status === 401) {\r\n                    dispatch(topHistoryFailed('You\\'re not authorized'));\r\n                }else {\r\n                    dispatch(setError('Not able to connect to the server'));\r\n                }\r\n            });\r\n        getUsers()\r\n            .then(response => {\r\n                if(response.status === 200) {\r\n                    dispatch(setUsers(response.data));\r\n                    dispatch(clearError())\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if(error.response && error.response.status === 400) {\r\n                    dispatch(topHistoryFailed('Bad request'));\r\n                } else if (error.response && error.response.status === 401) {\r\n                    dispatch(topHistoryFailed('You\\'re not authorized'));\r\n                } else {\r\n                    dispatch(setError('Not able to connect to the server'));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nconst topHistoryFailed = error => {\r\n    return {\r\n        type: SEARCH.HISTORY_FAILED,\r\n        payload: {\r\n            error\r\n        }\r\n    }\r\n}\r\n\r\nexport const setHistory = (history) => {\r\n    return {\r\n        type: SEARCH.SET_HISTORY,\r\n        payload: {\r\n            history\r\n        }\r\n    }\r\n}\r\n\r\nexport const setUsers = users => {\r\n    return {\r\n        type: SEARCH.SET_USERS,\r\n        payload: {\r\n            users\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport hash from 'object-hash';\r\nimport DefProfile from '../../assets/img/defprofile.png';\r\n\r\nconst TopHistory = ({topHistory, getPersonById, history}) => {\r\n    return (\r\n        <ListGroup bsPrefix={\"list-inline\"} className={\"text-center\"} as={\"ul\"}>\r\n            {\r\n                topHistory.map(({name, imgUrl, searchHistoryId}) => (\r\n                    <ListGroup.Item bsPrefix={\"list-inline-item\"} action={true} as={\"li\"} key={hash(searchHistoryId)}>\r\n                        <div className=\"p-2\">\r\n                            <div onClick={() => {\r\n                                getPersonById(searchHistoryId)\r\n                                    .then(() => {\r\n                                        history.push(\"/results\");\r\n                                    });\r\n                            }}>\r\n                                {\r\n                                    imgUrl\r\n                                    ? <img src={imgUrl} alt=\"Unable to load\" className=\"img-fluid rounded-circle mb-3\" style={{height: '85px', width: '85px'}}/>\r\n                                    : <img src={DefProfile} alt=\"Unable to load\" className=\"img-fluid mb-3\" style={{height: '90px', width: '90px'}} />\r\n                                }\r\n                                <div className=\"text-center\">\r\n                                    <div className=\"text-sm\">\r\n                                        {name}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n                ))\r\n            }\r\n        </ListGroup>\r\n    );\r\n}\r\n\r\nexport default withRouter(TopHistory);","import React from \"react\";\r\nimport {Button, FormControl,} from \"react-bootstrap\";\r\nimport * as Icon from \"react-feather\";\r\nimport {Field, reduxForm, Form} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendOneLine} from \"../../redux/actions/personCreators\";\r\n\r\nconst RenderField = ({input, placeholder, className, size}) => {\r\n    return (\r\n        <FormControl\r\n            {...input}\r\n            placeholder={placeholder}\r\n            className={className}\r\n            size={size}\r\n        />\r\n    )\r\n}\r\n\r\nlet LineSearch = ({\r\n    handleSubmit,\r\n    open,\r\n    dirty\r\n}) => {\r\n    return (\r\n        <Form className={\"flex-fill\"} onSubmit={handleSubmit}>\r\n            <div className={\"input-group\"}>\r\n                <Field\r\n                    component={RenderField}\r\n                    name={\"query\"}\r\n                    placeholder={\"Name, Email, Username or Phone\"}\r\n                    size={\"lg\"}\r\n                />\r\n                <Field\r\n                    component={RenderField}\r\n                    name={\"location\"}\r\n                    placeholder={\"Location (optionally)\"}\r\n                    className={\"d-none d-xl-block\"}\r\n                    size={\"lg\"}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                    <Button\r\n                        type={\"submit\"}\r\n                        disabled={!dirty || open}\r\n                        title={!dirty && \"Fill in the input\"}\r\n                    >\r\n                        <Icon.Search />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\nLineSearch = reduxForm({\r\n    form: 'lineSearch',\r\n    destroyOnUnmount: false,\r\n    onSubmit: (values, dispatch, props) => {\r\n        const {query, location} = values;\r\n        dispatch(sendOneLine(query, location));\r\n    }\r\n})(LineSearch);\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        open: state.advReducer.open,\r\n        initialState: state.oneLineReducer,\r\n        ...ownProps\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(LineSearch)","import LineSearch from \"../LineSearch/LineSearch\";\r\nimport {NavLink, Row, Col} from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport { setOpen, setClose } from \"../../redux/actions/advCreator\";\r\n\r\nclass SearchComponent extends Component {\r\n    render() {\r\n        const { \r\n            onFieldChange,\r\n            setOpen,\r\n            setClose,\r\n            open,\r\n            errorHandle\r\n        } = this.props;\r\n        return (\r\n            <>\r\n            <div className=\"w-100 d-flex py-3 order-md-1\">\r\n                <LineSearch onFieldChange={onFieldChange}/>\r\n                <div className=\"mx-3 align-self-center d-none d-xl-block d-lg-block\">\r\n                    <NavLink\r\n                        id={\"advancedButton\"}\r\n                        className={\"font-weight-bold text-decoration-none\"}\r\n                        role={\"button\"}\r\n                        onClick={() => open ? setClose() : setOpen()}\r\n                    >\r\n                        {open ? \"Back to basic\" : \"Advanced\"}\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n            <Row>\r\n                <Col md={5}>\r\n                    {\r\n                        errorHandle && \r\n                            (\r\n                                <div className=\"w-100 d-flex py-3 order-md-1\">\r\n                                    <span className=\"error-text\">{errorHandle}</span>\r\n                                </div>\r\n                            )\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        ...ownProps,\r\n        open: state.advReducer.open,\r\n        errorHandle: state.personReducer.errorHandle\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setOpen: () => dispatch(setOpen()),\r\n        setClose: () => dispatch(setClose())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(SearchComponent));","import SearchComponent from \"../components/SearchComponent/SearchComponent\";\r\nimport {setOpen} from \"../redux/actions/advCreator\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        open: state.advReducer.open,\r\n        errorHandle: state.personReducer.errorHandle\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setOpen: () => dispatch(setOpen())\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SearchComponent);","import React from \"react\";\r\nimport {Col, NavLink, Form as FormBoot, Row, Button} from \"react-bootstrap\";\r\nimport * as Icon from \"react-feather\";\r\nimport {clearSubmitErrors, Field, FieldArray, Form, reduxForm} from \"redux-form\";\r\nimport hash from 'object-hash';\r\nimport validate from \"./validate\";\r\n\r\nconst AddRemoveLink = ({\r\n    text,\r\n    index,\r\n    fields\r\n}) => (\r\n    <NavLink\r\n        className={`text-sm ${index ? \"text-danger\" : null}`}\r\n        onClick={() => index ? fields.remove(index) : (fields.length < 5 ? fields.push({}) : null)}\r\n    >\r\n        {\r\n            !index\r\n            ?\r\n            (<>\r\n                <Icon.Plus/>\r\n                {` Add another ${text}`}\r\n            </>)\r\n            : \"Remove\"\r\n        }\r\n    </NavLink>\r\n)\r\n\r\nconst renderField = ({\r\n    placeholder,\r\n    type,\r\n    meta: {\r\n        touched,\r\n        error\r\n    },\r\n    input\r\n}) => (\r\n    <>\r\n        <FormBoot.Control\r\n            placeholder={placeholder}\r\n            type={type}\r\n            {...input}\r\n            className={touched && error && \"error-input\"}\r\n        />\r\n    </>\r\n);\r\n\r\nconst renderNames = ({fields}) => (\r\n    <>\r\n        {\r\n            fields.map((name, index) => (\r\n                <Row key={hash(index)}>\r\n                    <Col md={2} as={\"label\"} className={\"font-weight-bold\"}>\r\n                        {!index && fields.name[0].toUpperCase() + fields.name.slice(1)}\r\n                    </Col>\r\n                    <Col md={7}>\r\n                        <div className=\"form-row\">\r\n                            <Col md={4} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"First Name\"}\r\n                                    name={`${name}.first`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                            <Col md={4} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"Middle Name\"}\r\n                                    name={`${name}.middle`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                            <Col md={4} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"Last Name\"}\r\n                                    name={`${name}.last`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <AddRemoveLink fields={fields} text={'Name'} index={index}/>\r\n                    </Col>\r\n                </Row>\r\n            ))\r\n        }\r\n    </>\r\n);\r\n\r\nconst renderEmails = ({fields}) => (\r\n        <>\r\n            {\r\n                fields.map((email, index) => (\r\n                    <Row key={hash(index)}>\r\n                        <Col md={2} as={\"label\"} className={\"font-weight-bold\"}>\r\n                            {!index && fields.name[0].toUpperCase() + fields.name.slice(1)}\r\n                        </Col>\r\n                        <Col md={7}>\r\n                            <div className=\"form-row\">\r\n                                <Col md={12} as={FormBoot.Group}>\r\n                                    <Field\r\n                                        placeholder={\"Email\"}\r\n                                        name={`${email}.address`}\r\n                                        type={\"email\"}\r\n                                        component={renderField}\r\n                                    />\r\n                                </Col>\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <AddRemoveLink fields={fields} text={'Email'} index={index}/>\r\n                        </Col>\r\n                    </Row>\r\n                ))\r\n            }\r\n        </>\r\n);\r\n\r\nconst renderPhones = ({fields}) => (\r\n    <>\r\n        {\r\n            fields.map((phone, index) => (\r\n                <Row key={hash(index)}>\r\n                    <Col md={2} as={\"label\"} className={\"font-weight-bold\"}>\r\n                        {!index && fields.name[0].toUpperCase() + fields.name.slice(1)}\r\n                    </Col>\r\n                    <Col md={7}>\r\n                        <div className=\"form-row\">\r\n                            <Col md={4} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"Country code\"}\r\n                                    name={`${phone}.country_code`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                            <Col md={8} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"Phone\"}\r\n                                    name={`${phone}.number`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <AddRemoveLink fields={fields} text={'Phone'} index={index}/>\r\n                    </Col>\r\n                </Row>\r\n            ))\r\n        }\r\n    </>\r\n);\r\n\r\nconst renderUsernames = ({fields}) => (\r\n    <>\r\n        {\r\n            fields.map((username, index) => (\r\n                <Row key={hash(index)}>\r\n                    <Col md={2} as={\"label\"} className={\"font-weight-bold\"}>\r\n                        {!index && fields.name[0].toUpperCase() + fields.name.slice(1)}\r\n                    </Col>\r\n                    <Col md={7}>\r\n                        <div className=\"form-row\">\r\n                            <Col md={12} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"Username\"}\r\n                                    name={`${username}.content`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <AddRemoveLink fields={fields} text={'Username'} index={index}/>\r\n                    </Col>\r\n                </Row>\r\n            ))\r\n        }\r\n    </>\r\n);\r\n\r\nconst renderAddresses = ({fields}) => (\r\n    <>\r\n        {\r\n            fields.map((address, index) => (\r\n                <Row key={hash(index)}>\r\n                    <Col md={2} as={\"label\"} className={\"font-weight-bold\"}>\r\n                        {!index && fields.name[0].toUpperCase() + fields.name.slice(1)}\r\n                    </Col>\r\n                    <Col md={7}>\r\n                        <div className=\"form-row\">\r\n                            <Col md={2} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"House\"}\r\n                                    name={`${address}.house`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                            <Col md={3} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"Street\"}\r\n                                    name={`${address}.street`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                            <Col md={2} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"Zip\"}\r\n                                    name={`${address}.zip_code`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                            <Col md={5} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"City, State an Country\"}\r\n                                    name={`${address}.city`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <AddRemoveLink fields={fields} text={'Address'} index={index}/>\r\n                    </Col>\r\n                </Row>\r\n            ))\r\n        }\r\n    </>\r\n);\r\n\r\nconst renderAssociates = ({fields}) => (\r\n    <>\r\n        {\r\n            fields.map((associate, index) => (\r\n                <Row key={hash(index)}>\r\n                    <Col md={2} as={\"label\"} className={\"font-weight-bold\"}>\r\n                        {!index && fields.name[0].toUpperCase() + fields.name.slice(1)}\r\n                    </Col>\r\n                    <Col md={7}>\r\n                        <div className=\"form-row\">\r\n                            <Col md={4} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"First Name\"}\r\n                                    name={`${associate}.names[0].first`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                            <Col md={4} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"Middle Name\"}\r\n                                    name={`${associate}.names[0].middle`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                            <Col md={4} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"Last Name\"}\r\n                                    name={`${associate}.names[0].last`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <AddRemoveLink fields={fields} text={'Name'} index={index}/>\r\n                    </Col>\r\n                </Row>\r\n            ))\r\n        }\r\n    </>\r\n);\r\n\r\nconst renderEducations = ({fields}) => (\r\n    <>\r\n        {\r\n            fields.map((education, index) => (\r\n                <Row key={hash(index)}>\r\n                    <Col md={2} as={\"label\"} className={\"font-weight-bold\"}>\r\n                        {!index && fields.name[0].toUpperCase() + fields.name.slice(1)}\r\n                    </Col>\r\n                    <Col md={7}>\r\n                        <div className=\"form-row\">\r\n                            <Col md={6} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"School\"}\r\n                                    name={`${education}.school`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                            <Col md={6} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"Academic Degree\"}\r\n                                    name={`${education}.degree`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <AddRemoveLink fields={fields} text={'Education'} index={index}/>\r\n                    </Col>\r\n                </Row>\r\n            ))\r\n        }\r\n    </>\r\n);\r\n\r\nconst renderJobs = ({fields}) => (\r\n    <>\r\n        {\r\n            fields.map((job, index) => (\r\n                <Row key={hash(index)}>\r\n                    <Col md={2} as={\"label\"} className={\"font-weight-bold\"}>\r\n                        {!index && fields.name[0].toUpperCase() + fields.name.slice(1)}\r\n                    </Col>\r\n                    <Col md={7}>\r\n                        <div className=\"form-row\">\r\n                            <Col md={6} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"Organization\"}\r\n                                    name={`${job}.organization`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                            <Col md={6} as={FormBoot.Group}>\r\n                                <Field\r\n                                    placeholder={\"Job Title\"}\r\n                                    name={`${job}.title`}\r\n                                    type={\"text\"}\r\n                                    component={renderField}\r\n                                />\r\n                            </Col>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <AddRemoveLink fields={fields} text={'Job'} index={index}/>\r\n                    </Col>\r\n                </Row>\r\n            ))\r\n        }\r\n    </>\r\n);\r\n\r\nconst renderAge = ({fields}) => (\r\n    <>\r\n        <Row>\r\n            <Col md={2} as={\"label\"} className={\"font-weight-bold\"}>\r\n                Age\r\n            </Col>\r\n            <Col md={7}>\r\n                <div className=\"form-row\">\r\n                    <Col md={12} as={FormBoot.Group}>\r\n                        <Field\r\n                            placeholder={\"Age of range (e.g. 30-35)\"}\r\n                            name={'dob'}\r\n                            type={\"text\"}\r\n                            component={renderField}\r\n                        />\r\n                    </Col>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n);\r\n\r\nlet AdvancedSearch = ({handleSubmit, error, reset, dirty}) => {\r\n    return (\r\n        <>\r\n            <Form onSubmit={handleSubmit}>\r\n                <div id=\"advNames\" className=\"mb-3\">\r\n                    <FieldArray\r\n                        name={\"names\"}\r\n                        component={renderNames}\r\n                    />\r\n                </div>\r\n                <div id=\"advEmails\" className=\"mb-3\">\r\n                    <FieldArray\r\n                        name={\"emails\"}\r\n                        component={renderEmails}\r\n                    />\r\n                </div>\r\n                <div id=\"advPhones\" className=\"mb-3\">\r\n                    <FieldArray\r\n                        name={\"phones\"}\r\n                        component={renderPhones}\r\n                    />\r\n                </div>\r\n                <div id=\"advUsernames\" className=\"mb-3\">\r\n                    <FieldArray\r\n                        name={\"usernames\"}\r\n                        component={renderUsernames}\r\n                    />\r\n                </div>\r\n                <div id=\"advAddresses\" className=\"mb-3\">\r\n                    <FieldArray\r\n                        name={\"addresses\"}\r\n                        component={renderAddresses}\r\n                    />\r\n                </div>\r\n                <div id=\"advAssociates\" className=\"mb-3\">\r\n                    <FieldArray\r\n                        name={\"relationships\"}\r\n                        component={renderAssociates}\r\n                    />\r\n                </div>\r\n                <div id=\"advEducations\" className=\"mb-3\">\r\n                    <FieldArray\r\n                        name={\"educations\"}\r\n                        component={renderEducations}\r\n                    />\r\n                </div>\r\n                <div id=\"advJobs\" className=\"mb-3\">\r\n                    <FieldArray\r\n                        name={\"jobs\"}\r\n                        component={renderJobs}\r\n                    />\r\n                </div>\r\n                <div id=\"advAge\" className=\"mb-3\">\r\n                    <Field\r\n                        name={\"dob\"}\r\n                        component={renderAge}\r\n                    />\r\n                </div>\r\n                {error && (\r\n                    <div className={\"mb-3\"}>\r\n                        <p className={\"error-text\"}>{error}</p>\r\n                    </div>\r\n                )}\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Button\r\n                            id={\"searchButton\"}\r\n                            size={\"lg\"}\r\n                            type={\"submit\"}\r\n                            className={\"mr-1\"}\r\n                            disabled={!dirty}\r\n                            title={!dirty && \"Fill in some fields\"}\r\n                        >\r\n                            Search\r\n                        </Button>\r\n                        <Button\r\n                            size={'lg'}\r\n                            className={\"btn btn-danger ml-1\"}\r\n                            onClick={reset}\r\n                        >\r\n                            Clear Form\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'advancedSearch',\r\n    destroyOnUnmount: false,\r\n    onSubmit: (values, dispatch, props) => {\r\n        validate(values);\r\n        props.send(values);\r\n        dispatch(clearSubmitErrors('advancedSearch'));\r\n    }\r\n})(AdvancedSearch);\r\n","import {SubmissionError} from \"redux-form\";\r\n\r\nexport default values => {\r\n    const errors = {\r\n        phones: []\r\n    }\r\n    let flagError = false, flagEmpty = true;\r\n    Object.keys(values).forEach(key => {\r\n        const array = Array.prototype.slice.call(values[key]);\r\n        array.forEach(element => {\r\n            if(Object.keys(element).length) {\r\n                flagEmpty = false\r\n            }\r\n        });\r\n    });\r\n    if(values.phones) {\r\n        values.phones.forEach((phone, index) => {\r\n            if(phone.code && !phone.number) {\r\n                errors.phones[index] = {number:'Required'}\r\n                flagError = true;\r\n            }\r\n        });\r\n    }\r\n    if(flagError) throw new SubmissionError({...errors, _error: 'Fill in recommended values'});\r\n    else if(flagEmpty) throw new SubmissionError({\r\n        _error: `Sorry, search is not available with the given information. \r\n        Please make sure to fill in, at least, one of the following fields: \r\n        Name, Email, a valid Phone number and Country code, Username or a full US address`\r\n    });\r\n}","import React from 'react';\r\nimport './Preloader.scss';\r\nexport const Preloader = (props) => {\r\n\treturn (\r\n\t\t<div className=\"loader-overlay\">\r\n\t\t\t<div className=\"loader\">\r\n\t\t\t\t<span></span>\r\n\t\t\t\t<span></span>\r\n\t\t\t\t<span></span>\r\n\t\t\t\t<span></span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Preloader;","import AdvancedSearch from \"../components/AdvancedSearch/AdvancedSearch\";\r\nimport {connect} from \"react-redux\";\r\nimport {Col, Collapse, Row} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport {sendAdvanced} from \"../redux/actions/personCreators\";\r\nimport Preloader from \"../components/Preloader/Preloader\";\r\nimport moment from 'moment';\r\n\r\nconst AdvancedSearchContainer = props => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <Collapse in={props.open}>\r\n                    <div id=\"collapseAdvanced\">\r\n                        {props.isFetching &&<Preloader/>}\r\n                        <AdvancedSearch {...props} />\r\n                    </div>\r\n                </Collapse>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const searchQuery = {\r\n        ...state.personReducer.searchQuery\r\n    };\r\n    Object.keys(searchQuery).forEach(key => searchQuery[key].length && !key.includes('@') ? null : delete searchQuery[key]);\r\n    return {\r\n        isFetching: state.personReducer.isFetching,\r\n        open: state.advReducer.open,\r\n        initialValues: state.advReducer,\r\n        ...ownProps\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        send: (values) => {\r\n            let data = {}\r\n            Object.keys(values).forEach(key => {\r\n                if(key === 'dob') {\r\n                    data[key] = values[key];\r\n                } else {\r\n                    const array = Array.prototype.slice.call(values[key]);\r\n                    data[key] = array.filter(element => Object.keys(element).length);\r\n                }\r\n            });\r\n            if(data.dob.length) {\r\n                const range = data.dob.split('-');\r\n                const date = {};\r\n                if(range.length === 1) {\r\n                    date.start = new Date();\r\n                    date.start.setFullYear(date.start.getFullYear() - +range[0] - 1);\r\n                    date.end = new Date();\r\n                    date.end.setFullYear(date.end.getFullYear() - +range[0]);\r\n                    date.start = moment(date.start).format('yyyy-MM-DD');\r\n                    date.end = moment(date.end).format('yyyy-MM-DD');\r\n                } else if(range.length === 2) {\r\n                    date.start = new Date();\r\n                    date.start.setFullYear(date.start.getFullYear() - +range[1] - 1);\r\n                    date.start.setDate(date.start.getDate() + 1);\r\n                    date.end = new Date();\r\n                    date.end.setFullYear(date.end.getFullYear() - +range[0]);\r\n                    date.start = moment(date.start).format('yyyy-MM-DD');\r\n                    date.end = moment(date.end).format('yyyy-MM-DD');\r\n                }\r\n                data.dob = {\r\n                    date_range: {\r\n                        ...date\r\n                    }\r\n                }\r\n            } else {\r\n                delete data.dob;\r\n            }\r\n            delete data.open;\r\n            return dispatch(sendAdvanced(data));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AdvancedSearchContainer);","import React, {Component} from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {NavLink as Link} from 'react-router-dom';\r\nimport {getPersonById, getTopHistory} from \"../redux/actions/historyCreators\";\r\nimport {connect} from \"react-redux\";\r\nimport TopHistory from \"../components/TopHistory/TopHistory\";\r\nimport SearchComponent from \"../containers/SearchContainer\";\r\nimport AdvancedSearchContainer from \"../containers/AdvancedSearchContainer\";\r\nimport {setClose} from \"../redux/actions/advCreator\";\r\nimport Preloader from \"../components/Preloader/Preloader\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nclass StartPage extends Component {\r\n\r\n    componentDidMount() {\r\n        const { getTopHistory, setClose, open } = this.props;\r\n        if(open) setClose();\r\n        getTopHistory();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { loggedIn, topHistory, getPersonById, isFetching } = this.props;\r\n        return(\r\n            <main className={\"px-2 mb-5\"}>\r\n                <Helmet>\r\n                    <title>{\"MGAP Search\"}</title>\r\n                </Helmet>\r\n                {\r\n                    !isFetching\r\n                    ?\r\n                        (\r\n                            <>\r\n                                <h1 className={\"display-3 text-primary mb3\"}>MGAP</h1>\r\n                                <SearchComponent />\r\n                                <AdvancedSearchContainer />\r\n                                <Row id={\"relatedSearch\"} className={\"mb-4 pt-5\"}>\r\n                                    <Col md={12}>\r\n                                        <TopHistory topHistory={topHistory} getPersonById={getPersonById}/>\r\n                                    </Col>\r\n                                </Row>\r\n                                {\r\n                                    loggedIn\r\n                                    ?\r\n                                        <Row>\r\n                                            <Col className={\"text-center\"}>\r\n                                                <Link to={\"/history\"} >\r\n                                                    View full history\r\n                                                </Link>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    : null\r\n                                }\r\n                            </>\r\n                        )\r\n                    : \r\n                        (\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <Preloader />\r\n                                </Col>\r\n                            </Row>\r\n                        )\r\n                }\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedIn: state.authReducer.loggedIn,\r\n        isFetching: state.personReducer.isFetching,\r\n        topHistory: state.historyReducer.topHistory,\r\n        person: state.personReducer.person,\r\n        possible_persons: state.personReducer.possible_persons,\r\n        error: state.personReducer.errorHandle,\r\n        open: state.advReducer.open\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTopHistory: () => dispatch(getTopHistory()),\r\n        getPersonById: (searchHistoryId) => dispatch(getPersonById(searchHistoryId)),\r\n        setClose: () => dispatch(setClose())\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(StartPage);","export const capitalize = (text) => {\r\n    return text && text.length ? text[0].toUpperCase() + text.slice(1) : null;\r\n}","import * as React from 'react';\r\nimport {capitalize} from \"../../helpers/capitalize\";\r\n\r\nexport const QueryRowItem = ({type, property, searchQuery}) => {\r\n\tconsole.log(searchQuery, type, searchQuery[type], searchQuery[type] instanceof Array);\r\n\treturn (\r\n\t\t<div className={\"text-muted\"} key={new Date().getTime() + type}>\r\n\t\t\t{\r\n\t\t\t\tsearchQuery[type] instanceof Array\r\n\t\t\t\t?\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\ttype === 'relationships'\r\n\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tsearchQuery[type].map(el => property.map(item => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-primary \" style={{fontWeight: '500'}}>{capitalize(type)}: </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{el['names'][0][item]}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tsearchQuery[type].map(el => property.map(item => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-primary \" style={{fontWeight: '500'}}>{capitalize(type)}: </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{el[item]}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t: \r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span className=\"text-primary\" style={{fontWeight: '500'}}> Age: </span>\r\n\t\t\t\t\t\t\t{searchQuery[type][property]}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};","import React from 'react';\r\nimport {QueryRowItem} from './QueryRowItem';\r\n\r\nconst initialData = {\r\n\taddresses: [\"display\"],\r\n\temails: [\"address\"],\r\n\tnames: [\"display\"],\r\n\tjobs: [\"display\"],\r\n\teducations: [\"display\"],\r\n\tphones:[\"display\"],\r\n    usernames: [\"content\"], \r\n    dob: [\"display\"],\r\n    relationships: [\"display\"]\r\n};\r\nconst QueryRow = ({searchQuery}) => {\r\n    return (\r\n        Object.keys(searchQuery).map((key, index) => {\r\n            console.log(key, searchQuery[key]);\r\n            if(searchQuery[key].length && !key.includes('@')) {\r\n                return <QueryRowItem \r\n                    key={index} \r\n                    type={key} \r\n                    property={initialData[key]}\r\n                    searchQuery={searchQuery}\r\n                />\r\n            }\r\n            return false;\r\n        })\r\n    );\r\n}\r\n\r\nexport default QueryRow;","import React from \"react\";\r\nimport {Col, NavLink, Row} from \"react-bootstrap\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport * as Icon from \"react-feather\";\r\nimport {getPersonById} from \"../../redux/actions/historyCreators\";\r\nimport {connect} from \"react-redux\";\r\nimport hash from 'object-hash';\r\nimport QueryRow from \"../ResultsSidebar/QueryRow\";\r\n\r\nlet HistoryRecords = ({historyRecords, history, getPersonById}) => {\r\n    return (\r\n        historyRecords && historyRecords.records.length\r\n        ?\r\n            (\r\n                historyRecords.records.map((record, index) => (\r\n                    <Row className={\"pt-2 pb-5 border-bottom\"}  key={hash(index)}>\r\n                        <Col md={3} className={\"text-nowrap\"}>\r\n                            {record.searchDate}\r\n                        </Col>\r\n                        <Col md={4} className={\"text-truncate\"}>\r\n                            {record.name}\r\n                        </Col>\r\n                        <Col md={3} className={\"text-truncate\"}>\r\n                            <QueryRow searchQuery={record.query} />\r\n                        </Col>\r\n                        <Col md={2} className={\"text-right text-nowrap\"}>\r\n                            <NavLink\r\n                                onClick={() => {\r\n                                    getPersonById(record.searchHistoryId)\r\n                                        .then(() => {\r\n                                            history.push('/results')\r\n                                        })\r\n                                }}\r\n                            >\r\n                                <Icon.Search className={\"mx-2\"}/>\r\n                            </NavLink>\r\n                        </Col>\r\n                    </Row>\r\n                ))\r\n            )\r\n        : <h1 className={\"h3\"}>No results found for the dates</h1>\r\n    );\r\n}\r\n\r\nHistoryRecords = withRouter(HistoryRecords);\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getPersonById: (id) => dispatch(getPersonById(id))\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(HistoryRecords);","import Preloader from \"./Preloader\";\r\nexport default Preloader;","import React, {Component} from \"react\";\r\nimport {Container, Dropdown, Form, Row, Col} from \"react-bootstrap\";\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport HistoryRecords from \"../components/HistoryRecords/HistoryRecords\";\r\nimport {getHistory} from \"../redux/actions/historyCreators\";\r\nimport {connect} from \"react-redux\";\r\nimport * as moment from \"moment\";\r\nimport hash from 'object-hash';\r\nimport ReactPaginate from 'react-paginate';\r\nimport Preloader from '../components/Preloader/index';\r\nimport { setClose } from \"../redux/actions/advCreator\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nclass HistoryPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pageSize: 5,\r\n            currentPage: 1,\r\n            userLogin: props.login,\r\n            startDate: null,\r\n            endDate: null\r\n        }\r\n\r\n        this.startOnChange = this.startOnChange.bind(this);\r\n        this.endOnChange = this.endOnChange.bind(this);\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n        this.userChange = this.userChange.bind(this);\r\n    }\r\n\r\n    handlePageChange(currentPage) {\r\n        this.setState({\r\n            currentPage\r\n        }, () => {\r\n            this.historyQuery();\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.open) this.props.setClose();\r\n        this.historyQuery();\r\n    }\r\n\r\n    historyQuery() {\r\n        const {\r\n            pageSize,\r\n            currentPage,\r\n            userLogin,\r\n            startDate,\r\n            endDate\r\n        } = this.state;\r\n        const data = {\r\n            pageSize,\r\n            currentPage: currentPage - 1,\r\n            userLogin,\r\n        };\r\n        if(startDate){\r\n            data.startDate = moment(startDate).format('yyyy-MM-DD');\r\n        }\r\n        if(endDate) {\r\n            data.endDate = moment(endDate).format('yyyy-MM-DD');\r\n        }\r\n        const { getHistory } = this.props;\r\n        getHistory(data);\r\n    }\r\n\r\n    startOnChange(date) {\r\n        this.setState({\r\n            startDate: date\r\n        }, () => {\r\n            this.historyQuery();\r\n        });\r\n    }\r\n\r\n    endOnChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        }, () => {\r\n            this.historyQuery();\r\n        });\r\n    }\r\n\r\n    userChange(event) {\r\n        this.setState({\r\n            userLogin: event.target.value,\r\n            currentPage: 1\r\n        }, () => {\r\n            this.historyQuery();\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            startDate,\r\n            endDate,\r\n            userLogin\r\n        } = this.state;\r\n        const {\r\n            history,\r\n            users,\r\n            isFetching\r\n        } = this.props;\r\n        return (\r\n            <main className=\"py-4\">\r\n                <Helmet>\r\n                    <title>{\"Search History\"}</title>\r\n                </Helmet>\r\n                <Container>\r\n                    <div className=\"border-bottom px-3 py-2 mb-5\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"h2 text-primary\">\r\n                                History\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        !isFetching\r\n                            ?\r\n                                (\r\n                                    <>\r\n                                        <Row className=\"px-3 mb-5\">\r\n                                            <Col xs={6}>\r\n                                                <Col xs={6}>\r\n                                                    <Dropdown className={\"bootstrap-select\"}>\r\n                                                        <Form.Control as={\"select\"} value={userLogin} onChange={this.userChange}>\r\n                                                            {\r\n                                                                users.map(user => <option key={hash(user)} value={user.login}>{user.login}</option>)\r\n                                                            }\r\n                                                        </Form.Control>\r\n                                                    </Dropdown>\r\n                                                </Col>\r\n                                            </Col>\r\n                                            <Col xs={6}>\r\n                                                <Dropdown className={\"pb-5 text-right\"}>\r\n                                                    <div className=\"form-inline\">\r\n                                                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                            <KeyboardDatePicker\r\n                                                                label={\"Start Date\"}\r\n                                                                value={startDate}\r\n                                                                onChange={this.startOnChange}\r\n                                                            />\r\n                                                            &nbsp;\r\n                                                            &nbsp;\r\n                                                            <KeyboardDatePicker\r\n                                                                label={\"End Date\"}\r\n                                                                value={endDate}\r\n                                                                onChange={this.endOnChange}\r\n                                                            />\r\n                                                        </MuiPickersUtilsProvider>\r\n                                                    </div>\r\n                                                </Dropdown>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <div className=\"px-3 mb-5\" id=\"historyTable\">\r\n                                            <HistoryRecords historyRecords={history}/>\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            : <Preloader />\r\n                    }\r\n                    {\r\n                        history && history.records && history.records.length\r\n                        ?\r\n                            (\r\n                                <ReactPaginate\r\n                                    breakClassName={\"page-item\"}\r\n                                    breakLinkClassName={\"page-link\"}\r\n                                    previousLinkClassName={\"page-link\"}\r\n                                    previousClassName={\"page-item\"}\r\n                                    nextClassName={\"page-item\"}\r\n                                    nextLinkClassName={\"page-link\"}\r\n                                    pageClassName={\"page-item\"}\r\n                                    pageLinkClassName={\"page-link\"}\r\n                                    activeClassName={\"active\"}\r\n                                    containerClassName={\"pagination\"}\r\n                                    pageCount={history.pageCount}\r\n                                    pageRangeDisplayed={5}\r\n                                    marginPagesDisplayed={1}\r\n                                    onPageChange={(test) => this.handlePageChange(test.selected)}\r\n                                />\r\n                            )\r\n                        : null\r\n                    }\r\n\r\n                </Container>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        history: state.historyReducer.history,\r\n        users: state.historyReducer.users,\r\n        login: state.authReducer.data.login,\r\n        isFetching: state.personReducer.isFetching,\r\n        open: state.advReducer.open\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getHistory: (data) => dispatch(getHistory(data)),\r\n        setClose: () => dispatch(setClose())\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(HistoryPage);","import * as API from '../../api/API';\r\n\r\nexport const AUTH = {\r\n    LOGIN: 'LOGIN',\r\n    LOGOUT: 'LOGOUT',\r\n    LOGOUT_FAILED: 'LOGOUT_FAILED',\r\n    FETCH_STARTED: 'FETCH_STARTED',\r\n    FETCH_FAILED: 'FETCH_FAILED',\r\n    FETCH_SUCCESSED: 'FETCH_SUCCESSED'\r\n}\r\n\r\nexport const sendSignout = () => {\r\n    return async (dispatch, getState) => {\r\n        const { session_token } = getState().authReducer;\r\n        API.signOut(session_token)\r\n            .then(response => {\r\n                dispatch(userLogout())\r\n            })\r\n            .catch(error => {\r\n                // dispatch(userLogoutFailed())\r\n                dispatch(userLogout())\r\n                dispatch(fetchUserFailed('Not able to connect to the server'));\r\n            });\r\n    }\r\n}\r\n\r\nexport const userLogout = () => {\r\n    return {\r\n        type: AUTH.LOGOUT\r\n    }\r\n}\r\n\r\nexport const userLogoutFailed = () => {\r\n    return {\r\n        type: AUTH.LOGOUT_FAILED\r\n    }\r\n}\r\n\r\nexport const fetchUser = (login, password) => {\r\n    return async dispatch  => {\r\n        dispatch(fetchUserStart());\r\n        await API.signIn({\r\n            login,\r\n            password\r\n        })\r\n            .then(response => {\r\n                if(response.status === 200) {\r\n                    dispatch(userLogin(response.data));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if(err.response && err.response.status === 401) {\r\n                    dispatch(fetchUserFailed('Wrong login or password'));\r\n                } else if(err.response && err.response.status === 500) {\r\n                    dispatch(fetchUserFailed('Server error'))\r\n                } else {\r\n                    dispatch(fetchUserFailed('Not able to connect to the server'));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchUserStart = () => {\r\n    return {\r\n        type: AUTH.FETCH_STARTED\r\n    }\r\n}\r\n\r\nexport const fetchUserFailed = (error) => {\r\n    return {\r\n        type: AUTH.FETCH_FAILED,\r\n        payload: {\r\n            error\r\n        }\r\n    }\r\n}\r\n\r\nexport const userLogin = (data) => {\r\n    return {\r\n        type: AUTH.LOGIN,\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}","import {Button, Col, Dropdown, Form, Nav} from \"react-bootstrap\";\r\nimport * as Icon from \"react-feather\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {sendSignout} from '../../redux/actions/authCreators';\r\nimport {connect} from 'react-redux';\r\n\r\nlet ProfileMenu = ({\r\n    sendSignout,\r\n    data\r\n}) => {\r\n    return (\r\n        <Nav className={\"ml-auto order-md-2\"} as={\"ul\"}>\r\n            <Dropdown as={\"li\"} className={\"nav-item py-2\"}>\r\n                <Dropdown.Toggle as={\"a\"} className={\"nav-link d-none d-sm-block text-uppercase\"}>\r\n                    <Icon.User size={16}/>\r\n                    <strong>{' ' + data.login}</strong>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Toggle bsPrefix={\"no-style\"} childBsPrefix={\"no-style\"} as={\"a\"} className={\"nav-link d-block d-sm-none text-right\"}>\r\n                    <span className={\"navbar-toggler-icon\"} />\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu id={\"ddUserMenu\"} alignRight={true}>\r\n                    <Dropdown.Header as={\"h6\"} className={\"text-center\"}>\r\n                        <strong>{' ' + data.email}</strong>\r\n                    </Dropdown.Header>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item>\r\n                        <NavLink to={\"/history\"}>\r\n                            <Icon.Search size={16}/>\r\n                            {\" Search History\"}\r\n                        </NavLink>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Form.Row className={\"mb-2\"}>\r\n                        <Col className={\"mr-3 text-center\"}>\r\n                            <Button variant={\"primary\"} onClick={() => sendSignout()}>\r\n                                Sign out\r\n                            </Button>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </Nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.authReducer.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendSignout: () => dispatch(sendSignout())\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ProfileMenu);","import React from \"react\";\r\nimport {Container, Navbar, Col} from \"react-bootstrap\";\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport ProfileMenu from \"./ProfileMenu\";\r\nimport SearchComponent from \"../../containers/SearchContainer\";\r\nimport AdvancedSearchContainer from \"../../containers/AdvancedSearchContainer\";\r\n\r\nlet Header = ({\r\n    location: {\r\n        pathname\r\n    },\r\n    loggedIn\r\n}) => {\r\n    return (\r\n        <header className={\"w-100 mb-auto\"}>\r\n            <Navbar expand={\"md\"} bg={\"light\"} className={`pt-4 ${pathname !== \"/\" ? \"shadow-sm\" : null}`}>\r\n                <Container>\r\n                    { pathname !== '/'\r\n                        ? (\r\n                            <>\r\n                                <Navbar.Brand as={NavLink} to={\"/\"} className={\"mr-5\"}>\r\n                                    <h1 className=\"display-3 text-primary\">\r\n                                        MGAP\r\n                                    </h1>\r\n                                </Navbar.Brand>\r\n                            </>\r\n                        )\r\n                        : null\r\n                    }\r\n                    {\r\n                        loggedIn\r\n                            ? <ProfileMenu />\r\n                            :\r\n                            <NavLink to={\"/login\"}>\r\n                                Sign in\r\n                            </NavLink>\r\n                    }\r\n                    { pathname !== '/'\r\n                        ? \r\n                            (\r\n                                <Col md={8}>\r\n                                    <SearchComponent />\r\n                                </Col>\r\n                            )\r\n                        : null\r\n                    }\r\n                </Container>\r\n            </Navbar>\r\n            <Navbar>\r\n                <Container>\r\n                    { pathname !== '/'\r\n                        ? <AdvancedSearchContainer />\r\n                        : null\r\n                    }\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        ...ownProps,\r\n        loggedIn: state.authReducer.loggedIn,\r\n    }\r\n}\r\n\r\nHeader = withRouter(Header);\r\nHeader = connect(\r\n    mapStateToProps,\r\n    null\r\n)(Header);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header/Header\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst Layout = ({children, location: {\r\n    pathname\r\n}}) => {\r\n    return (\r\n        <Container className={\"d-flex w-100 h-100 mx-auto flex-column\"} fluid={pathname !== '/'}>\r\n            <Header />\r\n            {children}\r\n            <footer className={\"mt-auto\"}/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default withRouter(Layout);","import React from \"react\";\r\nimport {Carousel, Col, Image, Row} from \"react-bootstrap\";\r\nimport {capitalize} from \"../../helpers/capitalize\";\r\nimport hash from 'object-hash';\r\n\r\nconst MainInfoRow = ({person}) => {\r\n    const {\r\n        names,\r\n        images,\r\n        user_ids,\r\n        gender,\r\n        origin_countries\r\n    } = person;\r\n    return (\r\n        <Row className={\"mx-2\"}>\r\n            <Col lg={{order: 2, span: 3}} className={\"text-lg-left text-center\"}>\r\n                <Carousel className={\"mx-auto\"} indicators={false} id={\"profileImage\"} >\r\n                    {\r\n                        images && images.length\r\n                        ? \r\n                            (\r\n                                images.map(image => (\r\n                                    <Carousel.Item key={hash(image)}>\r\n                                        <Image\r\n                                            fluid\r\n                                            roundedCircle\r\n                                            className={\"mb-3 profile-pic\"}\r\n                                            src={`http://thumb.pipl.com/image?height=150&width=150&zoom_face=false&tokens=${image.thumbnail_token}`}/>\r\n                                    </Carousel.Item>\r\n                                ))\r\n                            )\r\n                        : null\r\n                    }\r\n                </Carousel>\r\n            </Col>\r\n            <Col lg={{order: 1, span: 9}}>\r\n                <div className=\"mb-5\">\r\n                    <Row>\r\n                        {\r\n                            names.length && user_ids.length\r\n                            ?\r\n                                (\r\n                                    <Col lg={8}>\r\n                                        <h1 className=\"h3 text-lg-left text-center\">{names[0].display} ({user_ids[0].content})</h1>\r\n                                    </Col>\r\n                                )\r\n                            :null\r\n                        }\r\n                    </Row>\r\n                    {\r\n                        gender\r\n                        ?\r\n                            (\r\n                                <div className=\"text-secondary text-lg-left text-center\">\r\n                                    {capitalize(gender.content)}\r\n                                </div>\r\n                            )\r\n                        : null\r\n                    }\r\n                    {\r\n                        origin_countries && origin_countries.length\r\n                        ?\r\n                            (\r\n                                <div className=\"text-secondary text-lg-left text-center\">\r\n                                    From {origin_countries[0].country}\r\n                                </div>\r\n                            )\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default MainInfoRow;","import {capitalize} from \"./capitalize\";\r\n\r\nexport const typeFixer = (type) => {\r\n    return type && type.length ? type.replace('@', '').split('_').map(word => capitalize(word)).join(' ') : null;\r\n}","import React from 'react';\r\nimport { Popover, Row, Col } from 'react-bootstrap';\r\nimport {typeFixer} from \"../../helpers/typeFixer\";\r\n\r\nconst PopoverOverlay = (props) => (\r\n    <Popover {...props} >\r\n        <Popover.Title>\r\n            <strong>{props.data[props.pointer] || props.data.content || props.data.names[0].display}</strong>\r\n        </Popover.Title>\r\n        {\r\n            Object.keys(props.data).filter(key => {\r\n                return key.includes('@') && !!props.data[key];\r\n            }).length\r\n                ?\r\n                    (\r\n                        <Popover.Content>\r\n                            {\r\n                                Object.keys(props.data).filter(key => {\r\n                                    return key.includes('@') && !!props.data[key];\r\n                                }).map(key => (\r\n                                    <Row className={\"mb-2\"}>\r\n                                        <Col md={5}>\r\n                                            <strong>{ typeFixer(key) }</strong>\r\n                                        </Col>\r\n                                        <Col md={7} className=\"text-secondary\">\r\n                                            { typeFixer(props.data[key].toString()) }\r\n                                        </Col>\r\n                                    </Row>\r\n                                ))\r\n                            }\r\n                        </Popover.Content>\r\n                    )\r\n                : null\r\n        }\r\n    </Popover>\r\n);\r\n\r\nexport default PopoverOverlay;","import React from \"react\";\r\nimport {Col, OverlayTrigger, Row} from \"react-bootstrap\";\r\nimport hash from 'object-hash';\r\nimport PopoverOverlay from \"./Popover\";\r\n\r\nconst NamesRow = ({names}) => {\r\n    return (\r\n        names.length\r\n        ?\r\n            (\r\n                <Row className={\"mx-2\"}>\r\n                    <Col md={12} className={\"mb-5\"}>\r\n                        <h2 className=\"h4 py-2 border-bottom mb-3\">\r\n                            Names\r\n                        </h2>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                {\r\n                                    names.map(name => (\r\n                                        <div className=\"mb-2\" key={hash(name)}>\r\n                                            <OverlayTrigger trigger={['hover', 'focus']} placement=\"right\"  overlay={(data) => {\r\n                                                return PopoverOverlay({...data, data:name, pointer:\"display\"});\r\n                                            }}>\r\n                                                <span className={\"text-muted\"}>\r\n                                                    {name.display}\r\n                                                </span>\r\n                                            </OverlayTrigger>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        : null\r\n    );\r\n}\r\n\r\nexport default NamesRow;","import React from \"react\";\r\nimport {Col, OverlayTrigger, Row} from \"react-bootstrap\";\r\nimport {typeFixer} from \"../../helpers/typeFixer\";\r\nimport hash from 'object-hash';\r\nimport PopoverOverlay from \"./Popover\";\r\n\r\nconst EmailsRow = ({emails}) => {\r\n    return (\r\n        emails.length\r\n            ?\r\n            (\r\n                <Row className={\"mx-2\"}>\r\n                    <Col md={12} className={\"mb-5\"}>\r\n                        <h2 className=\"h4 py-2 border-bottom mb-3\">\r\n                            Emails\r\n                        </h2>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                {\r\n                                    emails.map(email => (\r\n                                        <div className=\"mb-2\" key={hash(email)}>\r\n                                            <OverlayTrigger trigger={['hover', 'focus']} placement=\"right\" data={email} overlay={(data) => {\r\n                                                return PopoverOverlay({...data, data:email, pointer:\"address\"});\r\n                                            }}>\r\n                                                <span className={\"text-muted\"}>\r\n                                                    {email.address}\r\n                                                </span>\r\n                                            </OverlayTrigger>\r\n                                            <span className=\"ml-3 text-muted\">\r\n                                                { typeFixer(email['@type']) }\r\n                                            </span>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n            : null\r\n    );\r\n}\r\n\r\nexport default EmailsRow;","import React from \"react\";\r\nimport {Col, OverlayTrigger, Row} from \"react-bootstrap\";\r\nimport {typeFixer} from \"../../helpers/typeFixer\";\r\nimport hash from 'object-hash';\r\nimport PopoverOverlay from \"./Popover\";\r\n\r\nconst AddressesRow = ({addresses}) => {\r\n    return (\r\n        addresses.length\r\n            ?\r\n            (\r\n                <Row className={\"mx-2\"}>\r\n                    <Col md={12} className={\"mb-5\"}>\r\n                        <h2 className=\"h4 py-2 border-bottom mb-3\">\r\n                            Addresses\r\n                        </h2>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                {\r\n                                    addresses.map(address => (\r\n                                        <div className=\"mb-2\" key={hash(address)}>\r\n                                            <OverlayTrigger trigger={['hover', 'focus']} placement=\"right\" data={address} overlay={(data) => {\r\n                                                return PopoverOverlay({...data, data:address, pointer:\"display\"});\r\n                                            }}>\r\n                                                <span className={\"text-muted\"}>\r\n                                                    {address.display}\r\n                                                </span>\r\n                                            </OverlayTrigger>\r\n                                            <span className=\"ml-3 text-muted display-6\">\r\n                                                { typeFixer(address['@type']) }\r\n                                            </span>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n            : null\r\n    );\r\n}\r\n\r\nexport default AddressesRow;","import React from \"react\";\r\nimport {Col, OverlayTrigger, Row} from \"react-bootstrap\";\r\nimport {typeFixer} from \"../../helpers/typeFixer\";\r\nimport hash from 'object-hash';\r\nimport PopoverOverlay from \"./Popover\";\r\n\r\nconst PhonesRow = ({phones}) => {\r\n    return (\r\n        phones.length\r\n            ?\r\n            (\r\n                <Row className={\"mx-2\"}>\r\n                    <Col md={12} className={\"mb-5\"}>\r\n                        <h2 className=\"h4 py-2 border-bottom mb-3\">\r\n                            Phones\r\n                        </h2>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                {\r\n                                    phones.map(phone => (\r\n                                        <div className=\"mb-2\" key={hash(phone)}>\r\n                                            <OverlayTrigger trigger={['hover', 'focus']} placement=\"right\" data={phone} overlay={(data) => {\r\n                                                return PopoverOverlay({...data, data:phone, pointer:\"display\"});\r\n                                            }}>\r\n                                                 <span className={\"text-muted\"}>\r\n                                                    {phone.display_international}\r\n                                                </span>\r\n                                            </OverlayTrigger>\r\n                                            <span className=\"ml-3 text-muted\">\r\n                                                { typeFixer(phone['@type']) }\r\n                                            </span>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n            : null\r\n    );\r\n};\r\n\r\nexport default PhonesRow;","import React from \"react\";\r\nimport {Col, OverlayTrigger, Row} from \"react-bootstrap\";\r\nimport hash from 'object-hash';\r\nimport PopoverOverlay from \"./Popover\";\r\n\r\nconst EducationsRow = ({educations}) => {\r\n    return (\r\n        educations.length\r\n            ?\r\n            (\r\n                <Row className={\"mx-2\"}>\r\n                    <Col md={12} className={\"mb-5\"}>\r\n                        <h2 className=\"h4 py-2 border-bottom mb-3\">\r\n                            Educations\r\n                        </h2>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                {\r\n                                    educations.map(education => (\r\n                                        <div className=\"mb-2\" key={hash(education)}>\r\n                                            <OverlayTrigger trigger={['hover', 'focus']} placement=\"right\" data={education} overlay={(data) => {\r\n                                                return PopoverOverlay({...data, data:education, pointer:\"display\"});\r\n                                            }}>\r\n                                                <span className={\"text-muted\"}>\r\n                                                    {education.display}\r\n                                                </span>\r\n                                            </OverlayTrigger>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n            : null\r\n    );\r\n}\r\n\r\nexport default EducationsRow;","import React from \"react\";\r\nimport {Col, OverlayTrigger, Row} from \"react-bootstrap\";\r\nimport hash from 'object-hash';\r\nimport PopoverOverlay from \"./Popover\";\r\n\r\nconst JobsRow = ({jobs}) => {\r\n    return (\r\n        jobs.length\r\n            ?\r\n            (\r\n                <Row className={\"mx-2\"}>\r\n                    <Col md={12} className={\"mb-5\"}>\r\n                        <h2 className=\"h4 py-2 border-bottom mb-3\">\r\n                            Jobs\r\n                        </h2>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                {\r\n                                    jobs.map(job => (\r\n                                        <div className=\"mb-2\" key={hash(job)}>\r\n                                            <OverlayTrigger trigger={['hover', 'focus']} placement=\"right\"  overlay={(data) => {\r\n                                                return PopoverOverlay({...data, data:job, pointer:\"display\"});\r\n                                            }}>\r\n                                                <span className={\"text-muted\"}>\r\n                                                    {job.display}\r\n                                                </span>\r\n                                            </OverlayTrigger>\r\n\r\n                                            <span className=\"ml-3 text-muted\">\r\n                                                { job.industry }\r\n                                            </span>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n            : null\r\n    );\r\n}\r\n\r\nexport default JobsRow;","import React from \"react\";\r\nimport {Col, OverlayTrigger, Row} from \"react-bootstrap\";\r\nimport hash from 'object-hash';\r\nimport PopoverOverlay from \"./Popover\";\r\n\r\nconst UrlsRow = ({urls}) => {\r\n    return (\r\n        urls && urls.length\r\n            ?\r\n            (\r\n                <Row className={\"mx-2\"}>\r\n                    <Col md={12} className={\"mb-5\"}>\r\n                        <h2 className=\"h4 py-2 border-bottom mb-3\">\r\n                            URLs\r\n                        </h2>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                {\r\n                                    urls.map(url => (\r\n                                        <div className=\"mb-2\" key={hash(url)}>\r\n                                            <OverlayTrigger trigger={['hover', 'focus']} placement=\"right\"  overlay={(data) => {\r\n                                                return PopoverOverlay({...data, data:url, pointer:\"url\"});\r\n                                            }}>\r\n                                                <a href={url.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                    {url.url}\r\n                                                </a>\r\n                                            </OverlayTrigger>\r\n\r\n                                            <span className=\"ml-3 text-muted\">\r\n                                                { url['@name'] }\r\n                                            </span>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n            : null\r\n    );\r\n}\r\n\r\nexport default UrlsRow;","import React from \"react\";\r\nimport {Col, OverlayTrigger, Row} from \"react-bootstrap\";\r\nimport hash from 'object-hash';\r\nimport PopoverOverlay from \"./Popover\";\r\n\r\nconst UsernamesRow = ({usernames}) => {\r\n    return (\r\n        usernames && usernames.length\r\n            ?\r\n            (\r\n                <Row className={\"mx-2\"}>\r\n                    <Col md={12} className={\"mb-5\"}>\r\n                        <h2 className=\"h4 py-2 border-bottom mb-3\">\r\n                            Usernames\r\n                        </h2>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                {\r\n                                    usernames.map(username => (\r\n                                        <div className=\"mb-2\" key={hash(username)}>\r\n                                            <OverlayTrigger trigger={['hover', 'focus']} placement=\"right\"  overlay={(data) => {\r\n                                                return PopoverOverlay({...data, data:username, pointer:\"content\"});\r\n                                            }}>\r\n                                                <span className={\"text-muted\"}>\r\n                                                    {username.content}\r\n                                                </span>\r\n                                            </OverlayTrigger>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n            : null\r\n    );\r\n}\r\n\r\nexport default UsernamesRow;","import React from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {sendAdvanced} from \"../../redux/actions/personCreators\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst ResultsRow = ({person, sendAdvanced}) => {\r\n    return (\r\n        <Row className=\"mb-5\">\r\n            <Col md={10}>\r\n                {\r\n                    person.names[0] && (\r\n                        <div className=\"h4 mb-2\">\r\n                            <NavLink\r\n                                to={\"/results\"}\r\n                                onClick={() => sendAdvanced(person)}>\r\n                                {person.names[0].display}\r\n                            </NavLink>\r\n                        </div>\r\n                    )\r\n                }\r\n                {\r\n                    person.addresses.length\r\n                    ?\r\n                        (\r\n                            <div className={\"text-secondary font-weight-bold\"}>\r\n                                {person.addresses[0].display}\r\n                            </div>\r\n                        )\r\n                    : null\r\n                }\r\n                {\r\n                    person.educations.length\r\n                    ?\r\n                        (\r\n                            <div className=\"text-secondary\">\r\n                                {person.educations[0].display}\r\n                            </div>\r\n                        )\r\n                    : null\r\n                }\r\n            </Col>\r\n            {\r\n                person.images.length\r\n                    ?\r\n                        (\r\n                            <Col md={2}>\r\n                                <img alt='' src={person.images[0].url} style={{height: '65px', width: '65px'}}className={\"rounded-circle mb-3\"}/>\r\n                            </Col>\r\n                        )\r\n                    : null\r\n            }\r\n            \r\n        </Row>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendAdvanced: (data) => dispatch(sendAdvanced(data))\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(ResultsRow);","import React, {Component} from \"react\";\r\nimport {Col} from \"react-bootstrap\";\r\nimport ResultsRow from \"./ResultsRow\";\r\nimport hash from 'object-hash';\r\nimport { connect } from \"react-redux\";\r\nimport { setClose } from \"../../redux/actions/advCreator\";\r\n\r\nclass Results extends Component {\r\n\r\n    componentDidMount() {\r\n        const { setClose, open } = this.props;\r\n        console.log(open);\r\n        if(open) setClose();\r\n    }\r\n\r\n    render() {\r\n        const { persons } = this.props;\r\n        return (\r\n            <>\r\n\r\n                <Col id=\"resultsMain\" md={12} ref={this.props.outerRef}>\r\n                    <h2 className=\"h4 py-2 border-bottom mb-3\">\r\n                        List of possible persons\r\n                    </h2>\r\n                    {\r\n                        persons && persons.length \r\n                        ?\r\n                            persons.map(person => (\r\n                                <ResultsRow person={person} key={hash(person)}/>\r\n                            ))\r\n                        : <span className=\"mx-auto text-muted pb-3\">None found</span>\r\n                    }\r\n                </Col>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        ...ownProps,\r\n        open: state.advReducer.open\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setClose: () => dispatch(setClose())\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Results);","import React from \"react\";\r\nimport {Col, OverlayTrigger, Row, NavLink} from \"react-bootstrap\";\r\nimport {typeFixer} from \"../../helpers/typeFixer\";\r\nimport hash from 'object-hash';\r\nimport PopoverOverlay from \"./Popover\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendOneLine} from \"../../redux/actions/personCreators\";\r\n\r\nconst RelationshipsRow = ({relationships, sendOneLine}) => {\r\n    return (\r\n        relationships && relationships.length\r\n            ?\r\n            (\r\n                <Row className={\"mx-2\"}>\r\n                    <Col md={12} className={\"mb-5\"}>\r\n                        <h2 className=\"h4 py-2 border-bottom mb-3\">\r\n                            Associated with\r\n                        </h2>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                {\r\n                                    relationships.map(relationship => (\r\n                                        <div className=\"mb-2\" key={hash(relationship)}>\r\n                                            <OverlayTrigger trigger={['hover', 'focus']} placement=\"right\" data={relationship} overlay={(data) => {\r\n                                                return PopoverOverlay({...data, data:relationship, pointer:\"display\"});\r\n                                            }}>\r\n                                                {\r\n                                                    relationship.names && relationship.names.length\r\n                                                        ?\r\n                                                            (\r\n                                                                <NavLink\r\n                                                                    href={\"\"}\r\n                                                                    style={{display: 'inline', padding: 0}}\r\n                                                                    onClick={() => {\r\n                                                                        sendOneLine(relationship.names[0].display);\r\n                                                                    }}>\r\n                                                                    {relationship.names[0].display}\r\n                                                                </NavLink>\r\n                                                            )\r\n                                                        : null\r\n                                                }\r\n                                            </OverlayTrigger>\r\n                                            <span className=\"ml-3 text-muted display-6\">\r\n                                                { typeFixer(relationship['@subtype']) }\r\n                                            </span>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n            : null\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendOneLine: (query) => dispatch(sendOneLine(query))\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(RelationshipsRow);","import React, {Component} from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport MainInfoRow from \"./MainInfoRow\";\r\nimport NamesRow from \"./NamesRow\";\r\nimport EmailsRow from \"./EmailsRow\";\r\nimport AddressesRow from \"./AddressesRow\";\r\nimport PhonesRow from \"./PhonesRow\";\r\nimport EducationsRow from \"./EducationsRow\";\r\nimport JobsRow from \"./JobsRow\";\r\nimport UrlsRow from \"./UrlsRow\";\r\nimport UsernamesRow from \"./UsernamesRow\";\r\nimport Results from '../Results/Results';\r\nimport RelationshipsRow from \"./RelationshipsRow\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nclass Profile extends Component {\r\n\r\n    componentDidMount() {\r\n        const { setClose, open } = this.props;\r\n        console.log(open);\r\n        if(open) setClose();\r\n    }\r\n\r\n    render() {\r\n        const {person, persons} = this.props;\r\n        return (\r\n            <>\r\n                <Helmet>\r\n                    <title>{person.names[0].display || \"No Name\"}</title>\r\n                </Helmet>\r\n                <Col md={9} ref={this.props.outerRef}>\r\n                    <MainInfoRow person={person} />\r\n                    <NamesRow names={person.names} />\r\n                    <PhonesRow phones={person.phones} />\r\n                    <EmailsRow emails={person.emails} />\r\n                    <RelationshipsRow relationships={person.relationships} />\r\n                    <AddressesRow addresses={person.addresses} />\r\n                    <EducationsRow educations={person.educations} />\r\n                    <JobsRow jobs={person.jobs} />\r\n                    <UrlsRow urls={person.urls}/>\r\n                    <UsernamesRow usernames={person.usernames} />\r\n                    <Row className={\"mx-2\"}>\r\n                        <Results persons={persons} />\r\n                    </Row>\r\n                </Col>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Profile;","import '../style/bootstrap-popover-x.min.css';\r\nimport Profile from \"../components/ProfilePageComponents/Profile\";\r\nimport { setClose } from '../redux/actions/advCreator';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        ...ownProps,\r\n        open: state.advReducer.open\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setClose: () => dispatch(setClose())\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Profile);","import React, {Component} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as Icon from \"react-feather\";\r\nimport {Col} from \"react-bootstrap\";\r\nimport QueryRow from \"./QueryRow\";\r\n\r\nclass ResultsSidebar extends Component {\r\n\trender() {\r\n\t\tconst {searchQuery} = this.props;\r\n\t\treturn (\r\n\t\t\t<Col md={3} id=\"resultsSidebar\" className=\"d-xl-block d-lg-block\">\r\n\t\t\t\t<h6 className={\"pb-2\"}>Results for</h6>\r\n\t\t\t\t{searchQuery && <QueryRow searchQuery={searchQuery} />\r\n\t\t\t\t}\r\n\t\t\t\t<hr className={\"mt-3 mb-4\"}/>\r\n\t\t\t\t<NavLink to={\"#\"} onClick={this.props.handleClick} className={\"d-none d-md-block text-decoration-none\"}>\r\n\t\t\t\t\t<Icon.Printer className={\"f-sm\"}/>\r\n\t\t\t\t\t{\" Print\"}\r\n\t\t\t\t</NavLink>\r\n\t\t\t</Col>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ResultsSidebar;","import React, {Component} from \"react\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport ResultsSidebar from \"../components/ResultsSidebar/ResultsSidebar\";\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"../pages/ProfilePage\";\r\nimport Results from \"../components/Results/Results\";\r\nimport {clearPersons, isFetching} from \"../redux/actions/personCreators\";\r\nimport ReactToPrint, {PrintContextConsumer} from \"react-to-print\";\r\nimport Preloader from \"../components/Preloader/Preloader\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nclass ResultsPage extends Component {\r\n\r\n    componentWillUnmount() {\r\n        const { clearPersons } = this.props;\r\n        clearPersons();\r\n    }\r\n\r\n    render() {\r\n        const { person, persons, searchQuery, isFetching, setIsFetching, unsetIsFetching } = this.props;\r\n        console.log(person);\r\n        return (\r\n\r\n            <main className=\"py-4 h-100\" ref={el => (this.componentRef = el)}>\r\n                <Helmet>\r\n                    <title>{\"List of possible persons\"}</title>\r\n                </Helmet>\r\n                <Container className={\"h-100\"}>\r\n                    <Row className={\"px-3 py-2 h-100\"}>\r\n                        <>\r\n                            <ReactToPrint content={() => this.componentRef} onBeforeGetContent={() => setIsFetching()} onBeforePrint={() => unsetIsFetching()}>\r\n                                <PrintContextConsumer>\r\n                                    {({ handlePrint }) => (\r\n                                        <ResultsSidebar handleClick={handlePrint} searchQuery={searchQuery} />\r\n                                    )}\r\n                                </PrintContextConsumer>\r\n                            </ReactToPrint>\r\n                            {\r\n                                !isFetching\r\n                                    ?\r\n                                        (\r\n                                            <Col md={9}>\r\n                                                {\r\n                                                    Object.keys(person).length || Object.keys(persons).length\r\n                                                        ?\r\n                                                        (\r\n                                                            Object.keys(person).length\r\n                                                                ? <Profile person={person} persons={persons} />\r\n                                                                : <Results persons={persons} />\r\n                                                        )\r\n                                                        :\r\n                                                        (\r\n                                                            <Col md={9} className={\"d-flex align-items-center justify-content-center\"}>\r\n                                                                <h1>No person found</h1>\r\n                                                            </Col>\r\n                                                        )\r\n                                                }\r\n                                            </Col>\r\n                                        )\r\n                                    :\r\n                                        (\r\n                                            <Col md={9}>\r\n                                                <Preloader />\r\n                                            </Col>\r\n                                        )\r\n                            }\r\n                        </>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        person: state.personReducer.person,\r\n        persons: state.personReducer.possible_persons,\r\n        searchQuery: state.personReducer.searchQuery,\r\n        errorHandle: state.personReducer.errorHandle,\r\n        isFetching: state.personReducer.isFetching\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        clearPersons: () => dispatch(clearPersons()),\r\n        setIsFetching: () => dispatch(isFetching(true)),\r\n        unsetIsFetching: () => dispatch(isFetching(false))\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ResultsPage);","import React, {useState} from \"react\";\r\nimport {Alert, Button, Container, Form, Row, Spinner} from \"react-bootstrap\";\r\nimport {fetchUser} from \"../redux/actions/authCreators\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet LoginPage = ({\r\n    error,\r\n    fetchUser,\r\n    fetching\r\n}) => {\r\n    const [login, setLogin] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    return (\r\n        <>\r\n            {\r\n                fetching\r\n                ?\r\n                    <Container className=\"d-flex justify-content-center align-items-center w-100 h-100\">\r\n                        <Spinner animation={\"border\"} />\r\n                    </Container>\r\n                :\r\n                <Container className={\"text-center h-100\"} fluid>\r\n                    <Row className={\"h-100 text-center\"}>\r\n                        <Form className={\"mx-auto my-auto\"} style={{minWidth: '300px'}}>\r\n                            <h1 className={\"h3 mb-3\"}>Sign in</h1>\r\n                            <Form.Label htmlFor={\"login\"} />\r\n                            <Form.Control\r\n                                id={\"login\"}\r\n                                placeholder={\"Login\"}\r\n                                autoComplete={\"username\"}\r\n                                value={login}\r\n                                onChange={(event) => setLogin(event.target.value)}\r\n                            />\r\n                            <Form.Label htmlFor={\"password\"} />\r\n                            <Form.Control\r\n                                id={\"password\"}\r\n                                placeholder={\"Password\"}\r\n                                autoComplete={'current-password'}\r\n                                type={\"password\"}\r\n                                value={pass}\r\n                                onChange={(event) => setPass(event.target.value)}\r\n                            />\r\n                            <hr/>\r\n                            {\r\n                                error && error.length\r\n                                    ?\r\n                                    <Alert variant={\"danger\"}>\r\n                                        {error}\r\n                                    </Alert>\r\n                                    : null\r\n                            }\r\n                            <Button\r\n                                block\r\n                                onClick={() => {\r\n                                    fetchUser(login, pass)\r\n                                }}\r\n                            >\r\n                                Sign in\r\n                            </Button>\r\n                        </Form>\r\n                    </Row>\r\n                </Container>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        error: state.authReducer.error,\r\n        fetching: state.authReducer.fetching\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUser: (login, password) => dispatch(fetchUser(login, password))\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LoginPage);","import React from 'react';\nimport './style/main.css';\nimport StartPage from \"./pages/StartPage\";\nimport {Route, Switch, Redirect} from \"react-router-dom\";\nimport HistoryPage from \"./pages/HistoryPage\";\nimport Layout from \"./containers/Layout\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport ResultsPage from \"./pages/ResultsPage\";\nimport {connect} from \"react-redux\";\nimport LoginPage from \"./pages/LoginPage\";\n\nconst App = ({\n    loggedIn\n}) => {\n    return (\n        <Switch>\n            {\n                loggedIn\n                ?\n                    (\n                        <>\n                            <Route\n                                path={\"/\"}\n                                exact\n                                render={() =>\n                                    (\n                                        <Layout>\n                                            <StartPage />\n                                        </Layout>\n                                    )\n                                }\n                            />\n                            <Route\n                                path={\"/history\"}\n                                render={() =>\n                                    (\n                                        <Layout>\n                                            <HistoryPage />\n                                        </Layout>\n                                    )\n                                }\n                            />\n                        <Route\n                            path={\"/results\"}\n                            render={() =>\n                                (\n                                    <Layout>\n                                        <ResultsPage />\n                                    </Layout>\n                                )\n                            }\n                        />\n                        <Route\n                            path={\"/searchHistory/:id\"}\n                            render={() =>\n                                (\n                                    <Layout>\n                                        <ProfilePage />\n                                    </Layout>\n                                )\n                            }\n                        />\n                        <Redirect\n                            to={\"/\"} />\n                    </>\n                    )\n                :\n                    (\n                        <>\n                            <Route\n                                path={\"/login\"}\n                                component={LoginPage}\n                            />\n                            <Redirect to={\"/login\"}/>\n                        </>\n                    )\n            }\n\n        </Switch>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.authReducer.loggedIn\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {ADV} from \"../actions/advCreator\";\r\n\r\nconst initialState = {\r\n    names: [{\r\n\r\n    }],\r\n    emails: [{\r\n\r\n    }],\r\n    phones: [{\r\n\r\n    }],\r\n    usernames: [{\r\n\r\n    }],\r\n    addresses: [{\r\n\r\n    }],\r\n    relationships: [{\r\n        names: [{\r\n\r\n        }]\r\n    }],\r\n    educations: [{\r\n\r\n    }],\r\n    jobs: [{\r\n\r\n    }],\r\n    dob: '',\r\n    open: false\r\n}\r\n\r\nconst advReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADV.SET_OPEN:\r\n            return {\r\n                ...state,\r\n                open: true\r\n            }\r\n        case ADV.SET_CLOSE:\r\n                return {\r\n                    ...state,\r\n                    open: false\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default advReducer;\r\n","import {AUTH} from \"../actions/authCreators\";\r\n\r\nconst initialState = {\r\n    loggedIn: false,\r\n    fetching: false,\r\n    error: null,\r\n    data: {}\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AUTH.LOGIN:\r\n            const { data } = action.payload;\r\n            return {\r\n                ...state,\r\n                loggedIn: true,\r\n                fetching: false,\r\n                data,\r\n                error: null\r\n            };\r\n        case AUTH.LOGOUT:\r\n            return {\r\n                ...state,\r\n                loggedIn: false,\r\n                session_token: null\r\n            };\r\n        case AUTH.FETCH_STARTED:\r\n            return {\r\n                ...state,\r\n                fetching: true\r\n            };\r\n        case AUTH.FETCH_FAILED:\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n                fetching: false\r\n            }\r\n        case AUTH.LOGOUT_FAILED:\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {SEARCH} from \"../actions/historyCreators\";\r\n\r\nconst initialState = {\r\n    topHistory: [],\r\n    getFromHistory: {\r\n\r\n    },\r\n    getHistory: {\r\n\r\n    },\r\n    users: [],\r\n    error: null\r\n}\r\n\r\nconst historyReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEARCH.HISTORY_FAILED:\r\n            return {\r\n                ...state,\r\n                error: action.payload.error\r\n            }\r\n        case SEARCH.SET_TOP_HISTORY:\r\n            const { topHistory } = action.payload;\r\n            return {\r\n                ...state,\r\n                topHistory\r\n            }\r\n        case SEARCH.SET_HISTORY:\r\n            const { history } = action.payload;\r\n            return {\r\n                ...state,\r\n                history\r\n            }\r\n        case SEARCH.SET_USERS:\r\n            const { users } = action.payload;\r\n            return {\r\n                ...state,\r\n                users\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default historyReducer;","import {PERSON} from \"../actions/personCreators\";\r\n\r\nconst initialState = {\r\n    personsCount: 0,\r\n    possible_persons: [],\r\n    person: {},\r\n    errorHandle: false,\r\n    isFetching: false\r\n}\r\n\r\nconst personReducer = (state = initialState, action) => {\r\n    const {personsCount, searchQuery} = action.payload || 0;\r\n    switch (action.type) {\r\n        case PERSON.SET_PERSON_INFO:\r\n            const { person } = action.payload;\r\n            return {\r\n                ...state,\r\n                person,\r\n                personsCount,\r\n                searchQuery,\r\n                errorHandle: false\r\n            }\r\n        case PERSON.SET_PERSONS:\r\n            const { possible_persons } = action.payload;\r\n            return {\r\n                ...state,\r\n                possible_persons,\r\n                personsCount,\r\n                searchQuery,\r\n                errorHandle: false\r\n            }\r\n        case PERSON.CLEAR_ERROR:\r\n            return {\r\n                ...state,\r\n                errorHandle: false\r\n            }\r\n        case PERSON.SET_ERROR:\r\n            console.log(action.status);\r\n            return {\r\n                ...state,\r\n                errorHandle: action.status\r\n            }\r\n        case PERSON.IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case PERSON.CLEAR_PERSONS: {\r\n            return {\r\n                ...state,\r\n                person: {},\r\n                possible_persons: []\r\n            }\r\n        }\r\n        case PERSON.SET_QUERY: {\r\n            const { searchQuery } = action;\r\n            return {\r\n                ...state,\r\n                searchQuery\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default personReducer;","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: null,\r\n            errorInfo: null\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error,\r\n            errorInfo\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log('test');\r\n        const {error} = this.state;\r\n        const {authError,historyError} = this.props;\r\n        if(error || authError || historyError) {\r\n            return (\r\n                <main className={\"mx-3 h-100\"}>\r\n                    <div className=\"h-100 d-flex flex-column align-items-center justify-content-center\">\r\n                        <h1 className={\"display-3 text-primary mb3\"}>MGAP</h1>\r\n                        <p className=\"h5 text-muted\">\r\n                            Error: {authError || historyError || error.message}\r\n                        </p>\r\n                    </div>\r\n                </main>\r\n            )\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authError: state.authReducer.error,\r\n        historyError: state.historyReducer.error\r\n    }\r\n}\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(ErrorBoundary);","const initialState = {\r\n    query: '',\r\n    location: ''\r\n}\r\n\r\nconst oneLineReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default oneLineReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Router} from \"react-router-dom\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport advReducer from \"./redux/reducers/advReducer\";\r\nimport authReducer from './redux/reducers/authReducer';\r\nimport historyReducer from \"./redux/reducers/historyReducer\";\r\nimport personReducer from \"./redux/reducers/personReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport history from \"./history\";\r\nimport ErrorBoundary from \"./components/ErrorBoundary/ErrorBoundary\";\r\nimport oneLineReducer from \"./redux/reducers/oneLineReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    form: formReducer,\r\n    advReducer,\r\n    authReducer,\r\n    historyReducer,\r\n    personReducer,\r\n    oneLineReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router history={history}>\r\n            <ErrorBoundary>\r\n                <App />\r\n            </ErrorBoundary>\r\n        </Router>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}